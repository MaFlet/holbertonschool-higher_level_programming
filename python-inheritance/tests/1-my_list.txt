"print_sorted" module
====================

Using "print_sorted"
------------------
    >>> MyList = __import__('1-my_list').MyList

TEST CONDITIONS
==================
Testing printing the list and inherited list
***
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]

Testing printing all negative integers
***
>>> my_list = MyList()
>>> my_list.append(-1)
>>> my_list.append(-4)
>>> my_list.append(-2)
>>> my_list.append(-3)
>>> my_list.append(-5)
>>> print(my_list)
[-1, -4, -2, -3, -5]
>>> my_list.print_sorted()
[-5, -4, -3, -2, -1]
>>> print(my_list)
[-1, -4, -2, -3, -5]

Testing printing mixed negative and positive integers
***
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(-4)
>>> my_list.append(2)
>>> my_list.append(-3)
>>> my_list.append(5)
>>> print(my_list)
[1, -4, 2, -3, 5]
>>> my_list.print_sorted()
[-4, -3, 1, 2, 5]
>>> print(my_list)
[1, -4, 2, -3, 5]

Testing printing float values
***
>>> my_list = MyList()
>>> my_list.append(1.1)
>>> my_list.append(4.4)
>>> my_list.append(2.2)
>>> my_list.append(3.3)
>>> my_list.append(5.0)
>>> print(my_list)
[1.1, 4.4, 2.2, 3.3, 5.0]
>>> my_list.print_sorted()
[1.1, 2.2, 3.3, 4.4, 5.0]
>>> print(my_list)
[1.1, 4.4, 2.2, 3.3, 5.0]

Testing printing empty list
***
>>> my_list = MyList()
>>> print(my_list)
[]
>>> my_list.print_sorted()
[]
>>> print(my_list)
[]


